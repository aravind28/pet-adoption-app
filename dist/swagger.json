{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Sample spec",
    "description": "Sample spec for Swagger",
    "termsOfService": "http://swagger.io/terms/"
  },
  "basePath": "/",
  "tags" : [
    {"name": "Question", 
    "description": "API for creating and deleting questions"
    },
    {
      "name": "Comment",
      "description": "API for creating and retrieving comments"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/msdapi/project/user/{userId}/question": {
       "post": {
          "tags":["Question"],
          "description": "Create a new question object for the given user",
          "operationId": "createQuestion",
          "produces": [
            "application/json"
          ],
          "parameters": [
              {
                "name": "Question Body",
                "in": "body",
                "description": "The new question to be created",
                "required": true,
              "schema": {
                "$ref": "#/definitions/create"
                }
            },
            {
                "name": "userId",
                "in": "path",
                "description": "ID of the user who posted the question",
                "required": true,
                "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "A unique question ID will be returned after creating a question",
              "schema": {
                 "$ref": "#/definitions/response"
              }
            }
          }
        }
    },
    "/msdapi/project/question/{questionId}": {
        "delete":{
          "tags":["Question"],
          "description":"Deletes a question",
          "operationId":"delete",
          "produces": [
            "application/json"
          ],
          "parameters":[
              {
                "name": "questionId",
                "in": "path",
                "description": "ID of the question to delete",
                "required": true,
                "type": "string"
              }
            ],
          "responses": {
            "200": {
              "description": "delete response"
            }
          }
        }
      },
    "/msdapi/project/pet/{userId}/comments": {
      "post": {
        "tags": [
          "Comment"
        ],
        "description": "Create a new comment object for the given user",
        "operationId": "createComment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Comment Body",
            "in": "body",
            "description": "The new comment to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user who posted the comment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A unique comment ID will be returned after creating a question",
            "schema": {
              "$ref": "#/definitions/createCommentResponse"
            }
          }
        }
      }
    },
    "/msdapi/project/comments/{commentId}": {
      "get": {
        "tags": [
          "Comment"
        ],
        "description": "Retrieve a comment object with the given ID",
        "operationId": "getComment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of the comment to be retrieved",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The comment with the requested ID",
            "schema": {
              "$ref": "#/definitions/comment"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "create": {
      "properties": {
        "title": {
          "required":true,
          "type": "string",
          "example": "How can I adopt a cat?"
        },
        "content": {
          "required":true,
          "type":"string",
          "example": "Could anyone show me the steps to adopt a pet?"
        } 
      }
    },
    "response1": {
        "properties": {
          "questionId": {
            "required":true,
            "type": "string",
            "example": "23423456543"
          },
          "request": {
            "required":true,
            "type": "schema",
            "example": {
              "questionId":"23423456543"
            }
          }
      }
    },
    "response": {
        "properties": {
            "questionId": {
              "required": true,
              "type" : "string",
              "example" : "12321432423"
            }
        }
    },
    "delete": {
        "properties": {
            "questionId": {
              "required": true,
              "type" : "string",
              "example" : "234344234234"
            }
        }
    },
    "createCommentResponse": {
      "properties": {
        "commentId": {
          "required": true,
          "type": "string",
          "example": "123456"
        }
      }
    },
    "comment": {
      "properties": {
        "createdAt": {
          "required": true
        },
        "comments": {
          "required": true,
          "type": "string",
          "example": "This is a sample comment."
        },
        "username": {
          "required": true,
          "type": "string",
          "example": "SampleUser"
        },
        "emails": {
          "required": false,
          "example": "[12345@gmail.com]"
        }
      }
    },
    "400error" : {
       "properties": {
        "message": {
          "type": "string",
          "example" : "400 Bad Request"
        }
      }
    }
  }
}