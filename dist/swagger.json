{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Sample spec",
    "description": "Sample spec for Swagger",
    "termsOfService": "http://swagger.io/terms/"
  },
  "basePath": "/",
  "tags" : [
    {"name": "Tag1",
    "description": "API for something"
    },
    {"name": "Users",
      "description": "API for Users"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    ""
  ],
  "produces": [
    "json"
  ],
  "paths": {
    "/path/to/method": {
       "post": {
          "tags": ["Tag1"],
          "description": "what this API does",
          "operationId": "for the URL",
          "produces": [
            "application/json"
          ],
          "parameters": [
              {
                "name": "Job Parameters",
                "in": "body",
                "description": "Job to add to the database",
                "required": true,
              "schema": {
                "$ref": "#/definitions/create"
                }
            }
          ],
          "responses": {
            "200": {
              "description": "create response",
              "schema": {
                 "$ref": "#/definitions/response"
              }
            }
          }
        }
    },
    "/path/to/method/{someVariable}": {
        "delete":{
          "tags":["Tag1"],
          "description":"Deletes a something",
          "operationId":"delete",
          "produces": [
            "application/json"
          ],
          "parameters":[
              {
                "name": "someVariable",
                "in": "path",
                "description": "ID to delete",
                "required": true,
                "type": "string"
              }
            ],
          "responses": {
            "200": {
              "description": "delete response",
              "schema":{
                "$ref":"#/definitions/deleteRes"
              }
            }
          }
        },
      "get":{
          "tags": [ "Tag1"],
          "description": "Returns the status of something",
          "operationId": "findById",
          "produces": [
            "application/json"
          ],
          "parameters": [
              {
                "name": "ID",
                "in": "path",
                "description": "ID to fetch",
                "required": true,
                "type": "string"
              }
            ],
        "responses": {
            "200": {
              "description": "response",
              "schema": {
                "$ref": "#/definitions/response1"
              }
            }
          }
        }
      },
    "/msdproject/project/user/login":{
      "post": {
        "tags": ["Users"],
        "description": "Checks user login",
        "operationId": "for the URL",
        "produces": [
          "json"
        ],
        "parameters":[
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Job to check User credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs in an user if s/he has valid credentials",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/msdproject/project/user/logout":{
      "post": {
        "tags": ["Users"],
        "description": "Logs out a User",
        "oprationId": "for the URL",
        "produces": [],
        "parameters": [
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Job to logout a User",
            "required": true,
            "schema":{
              "$ref": "#/definition/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logs out a user",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/msdproject/project/user/loggedin":{
      "get": {
        "tags": ["Users"],
        "description": "Checks if the user is logged in. Used for session management.",
        "operationId": "for the URL",
        "produces": [],
        "parameters": [
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Job to check if User is logged in",
            "required": true,
            "schema": {
              "$red": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Maintains a session if user is logged in with valid credentials",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/msdapi/project/user":{
      "post": {
        "tags": ["Users"],
        "description": "Creates a new User",
        "operationId": "for the URL",
        "produces": ["json"],
        "parameters":[
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Job to create a new User",
            "required": true,
            "schema":{
              "$ref": "#/definitions/create"
            }
          }
        ],
        "response": {
          "200": {
            "description": "Creates a new user",
            "schema": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/msdapi/project/user/:id":{
      "put":{
        "tags": ["Users"],
        "description": "Update details of an user",
        "operationId": "for the URL",
        "produces": ["json"],
        "parameters": [
          {
            "name": "Job Parameters",
            "in": "body",
            "description": "Job to Update details of an existing User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/create"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the details of an existing User successfully",
            "scehma": {
              "$ref": "#/definitions/response"
            }
          }
        }
      }
    },
    "/msdapi/project/user/{id}":{
      "delete": {
        "tags": ["Users"],
        "description": "Deletes a User",
        "operationId": "delete",
        "produces": ["json"],
        "parameters":[
          {
            "name": "Id",
            "in": "path",
            "description": "Id to delete a User",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a User successfully",
            "schema": {
              "$ref": "#/definitions/deleteRes"
            }
          }
        }
      }
  }
  },
  "definitions": {
    "create": {
      "properties": {
        "eventId": {
          "required":true,
          "type": "string",
          "example": "mathmaticial"
        },
        "numberRequired": {
          "required":true,
          "type":"integer",
          "format": "int64",
          "example": 500
        }
      }
    },
    "response1": {
        "properties": {
          "jobID": {
            "required":true,
            "type": "string",
            "example": "23423456543"
          },
          "request": {
            "required":true,
            "type": "schema",
            "example": {
              "eventId":"mathmaticial",
              "numberRequired": 500
            }
          }
      }
    },
    "response": {
        "properties": {
            "jobID": {
              "required": true,
              "type" : "string",
              "example" : "12321432423"
            }
        }
    },
    "delete": {
        "properties": {
            "jobID": {
              "required": true,
              "type" : "string",
              "example" : "234344234234"
            },
            "status" : {
              "required": true,
              "type": "string",
              "example": "deleted"
            }
        }
    },
    "400error" : {
       "properties": {
        "message": {
          "type": "string",
          "example" : "400 Bad Request"
        }
      }
    }
  }
}